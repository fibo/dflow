#!/usr/bin/env node

process.title = 'dflow'

var fs   = require('fs'),
    nopt = require('nopt'),
    path = require('path')

var pkg = require('../package.json')

var createEmptyGraph = require('../src/engine/createEmptyGraph'),
    editorServer     = require('../src/editor/server')

// Process arguments.

var knownOpts = {
      help: Boolean,
      indentJSON: Boolean,
      port: Number,
      runOnEdit: Boolean
    },
    shortHandOpts = {
      h: '--help',
      p: '--port'
    }

var command = process.argv[2]

var opt = nopt(knownOpts, shortHandOpts, process.argv, 2)

if (opt.help) {
  console.log('Usage: dflow [options] [path/to/graph.json]\n')
  console.log('  -h, --help          print this message and exit')
  console.log('  --indentJSON        indent saved JSON graph')
  console.log('  -p, --port          server port number, defaults to 3000 or PORT env var')
  console.log('  --run-on-edit       execute graph while being edited')
  console.log('  --version           print current version and exit')
  console.log('\nFor more info point your browser to ' + pkg.homepage)
  process.exit(0)
}

if (opt.version) {
  console.log(pkg.version)
  process.exit(0)
}

function appendCurrentWorkingDir (givenPath) {
  return path.join(process.cwd(), givenPath)
}

var graphPath = opt.argv.remain
                        .map(appendCurrentWorkingDir)
                        .shift()

function checkGraphPath (err, stats) {
  if (err && err.code === 'ENOENT') {
    createEmptyGraph(graphPath, editorServer.bind(null, graphPath, opt))
  }
  else {
    if (stats.isFile()) {
      editorServer(graphPath, opt)
    }
  }
}

if (typeof graphPath === 'undefined')
  editorServer(graphPath, opt)
else
  fs.stat(graphPath, checkGraphPath)

