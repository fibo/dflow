var examples = require('examples')
var fun = require('engine/fun')
var isDflowFun = require('engine/isDflowFun')

describe('isDflowFun', function () {
  var context = (typeof window === 'object') ? 'client' : 'server'

  describe('returns false if it', function () {
    it('is a function, has graph and func properties but graph is not valid', function () {
      function f () { /* not generated by dflow */ }

      f.funcs = {}
      f.graph = { task: {}, pipe: { '1': [ '1', '2', 'zero' ] } }

      isDflowFun(f).should.be.ko
    })

    it('is a function but has not a graph property', function () {
      function f () { /* not generated by dflow */ }

      f.funcs = {}

      isDflowFun(f).should.be.ko
    })

    it('is a function but has not a funcs property', function () {
      function f () { /* not generated by dflow */ }

      f.graph = {}

      isDflowFun(f).should.be.ko
    })

    it('is a function but graph property is not an object', function () {
      function f () { /* not generated by dflow */ }

      f.funcs = {}
      f.graph = 'not an object'

      isDflowFun(f).should.be.ko
    })
  })

  it('returns false if it is a function but funcs property is not an object', function () {
    function f () { /* not generated by dflow */ }

    f.funcs = 'not an object'
    f.graph = {}

    isDflowFun(f).should.be.ko
  })

  describe('returns true if', function () {
    it('is a function generated by dflow', function () {
      for (var exampleName in examples) {
        var exampleGraph = examples[exampleName]

        var graphInfo = exampleGraph.info || {}
        var graphContext = graphInfo.context || 'universal'

        if (graphContext === context) {
          var f = fun(exampleGraph)

          isDflowFun(f).should.be.ko
        }
      }
    })
  })

  describe('returns false if', function () {
    it('is not a function', function () {
      isDflowFun('not a function').should.be.ko
    })
  })
})
