extends layout

block content
  #dflow-graph
    // TODO prova a disegnare nel canvas
    canvas(id='dflow-canvas', width='100%', height='100%')

    #node1(class='dflow-node', draggable='true')

    #dflow-cursor(class='dflow-node', draggable='true')
      #dflow-add-graph(class='dflow-cursor-choice') G
      #dflow-add-node(class='dflow-cursor-choice') N
      #dflow-add-out(class='dflow-cursor-choice') O
      #dflow-add-in(class='dflow-cursor-choice') I

  script
    // TODO vedi http://www.diffusedreality.com/content.html

    var dflowCursor = document.getElementById('dflow-cursor');
    var dflowGraph = document.getElementById('dflow-graph');

    var dflowAddNode = document.getElementById('dflow-add-node');

    var toggleDiv = function (div) {
      // TODO ritorna true o false se e' visibile oppure no
      // cosi si puo fare if(div.toggle())
      if (div.style.display == 'inline') {
        div.style.display = 'none';
      }
      else if (div.style.display == 'none') {
        div.style.display = 'inline';
      }
      else if (div.style.display == '') {
        div.style.display = 'inline';
      }
    }

    var addNode = function () {
      var nodeDiv = document.createElement('div');
      nodeDiv.className = 'dflow-node';
      nodeDiv.style.left = dflowCursor.style.left;
      nodeDiv.style.top = dflowCursor.style.top;
      nodeDiv.style.height = 50 + 'px';
      nodeDiv.style.width = 100 + 'px';
      dflowGraph.appendChild(nodeDiv);
    }

    dflowAddNode.addEventListener('click', function (event) {
      event.stopPropagation();
      toggleDiv(dflowCursor);
      addNode();
    });

    dflowGraph.addEventListener('click', function () {
      toggleDiv(dflowCursor);
    });

    window.addEvent('domready',function(){
      $('dflow-cursor').makeDraggable();
      //var myDrag = new Drag.Move('dflow-cursor',
      //{container:'dflow-graph'}
      //);
    });

    //new Drag.Move($('dflow-cursor'));
    console.log($('dflow-cursor'));
    console.log(MooTools);
    /*
    // TODO vedi http://jsbin.com/uzovu/1357
    var dragItems = document.querySelectorAll('[draggable=true]');

    function getPosition(obj){
      var topValue= 0;
      var leftValue= 0;
      while(obj){
    leftValue+= obj.offsetLeft;
    topValue+= obj.offsetTop;
    obj= obj.offsetParent;
    }
    finalvalue = [leftValue , topValue];
    return finalvalue;
    }

    var logEvent = function (event) { console.log(event); }
    var cancel = function (event) {
      event.preventDefault();
      return false;
    }

    for (var i = 0; i < dragItems.length; i++) {
      var dragItem = dragItems[i];
      dragItem.addEventListener('dragstart', function (event) {
        event.dataTransfer.setData('divId', this.id);
      });
      dragItem.addEventListener('dragend', cancel);
    }
    dflowGraph.addEventListener('dragenter', cancel);
    dflowGraph.addEventListener('dragover', cancel);
    dflowGraph.addEventListener('drop', function (event) {
      event.preventDefault();
      var divId = event.dataTransfer.getData('divId');
      var div = document.getElementById(divId);
      console.log(getPosition(dflowGraph));
      var p = getPosition(dflowGraph);
      var x = event.pageX-p[0];
      var y = event.pageY-p[0];
      div.style.left = x+'px';
      div.style.top = y+'px';
    });
    */

