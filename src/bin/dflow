#!/usr/bin/env node

process.title = 'dflow'

// TODO use budo for edit or run client side actions
// add run server side and validate actions
// possible actions
//
// serve: renders graph client side
// edit: opens editor
// run: executes server side
// validate: checks that graph is ok

var fs = require('fs')
var nopt = require('nopt')
var path = require('path')

var pkg = require('../../package.json')

var createEmptyGraph = require('../engine/createEmptyGraph')
var editorServer = require('../editor/server')

// Process arguments.

var knownOpts = {
  help: Boolean,
  indentJSON: Boolean,
  runOnEdit: Boolean,
  port: Number
}
var shortHandOpts = {
  h: '--help',
  p: '--port'
}

var opt = nopt(knownOpts, shortHandOpts, process.argv, 2)

if (opt.help) {
  console.log('Usage: dflow [options] [path/to/graph.json]\n')
  console.log('  -h, --help          print this message and exit')
  console.log('  --indentJSON        indent saved JSON graph')
  console.log('  -p, --port          server port number, defaults to 3000 or PORT env var')
  console.log('  --run-on-edit       execute graph while being edited')
  console.log('  --version           print current version and exit')
  console.log('\nFor more info point your browser to ' + pkg.homepage)
  process.exit(0)
}

if (opt.version) {
  console.log(pkg.version)
  process.exit(0)
}

function appendCurrentWorkingDir (givenPath) {
  return path.join(process.cwd(), givenPath)
}

var graphPath = opt.argv.remain
                        .map(appendCurrentWorkingDir)
                        .shift()

function checkGraphPath (err, stats) {
  if (err && err.code === 'ENOENT') {
    createEmptyGraph(graphPath, editorServer.bind(null, graphPath, opt))
  } else {
    if (stats.isFile()) {
      editorServer(graphPath, opt)
    }
  }
}

if (typeof graphPath === 'undefined') {
  editorServer(graphPath, opt)
} else {
  fs.stat(graphPath, checkGraphPath)
}
